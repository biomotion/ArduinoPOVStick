#define INT_PIN 2
#define BUTTON_PIN 9
//BT Pins
#define RX 4  // to BT TX (no need voltage divider)
#define TX 7  // to BT RX through a voltage divider
//74HC595
#define LATCH_PIN 12  // to pin 12
#define CLOCK_PIN 11  // to pin 11
#define DATA_PIN 8    // to pin 8
#define NUM_OF_ROWS 16
#define NUM_OF_TABLES 36
const PROGMEM uint16_t tables[NUM_OF_TABLES][NUM_OF_ROWS] = {
{//0
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000111111110000,
0b0001111111111000,
0b0011000000001100,
0b0010000000000100,
0b0010000000000100,
0b0011000000001100,
0b0001111111111000,
0b0000111111110000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//1
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000100000000100,
0b0001100000000100,
0b0011000000000100,
0b0011111111111100,
0b0011111111111100,
0b0000000000000100,
0b0000000000000100,
0b0000000000000100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//2
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0010000000001000,
0b0011000000001100,
0b0011100000000100,
0b0010110000000100,
0b0010011000000100,
0b0010001110001100,
0b0010000111111000,
0b0010000001110000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//3
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0001000000001000,
0b0011000000001100,
0b0010000010000100,
0b0010000010000100,
0b0010000010000100,
0b0011000111001100,
0b0001111101111000,
0b0000111000110000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//4
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000011000000000,
0b0000011110000000,
0b0000010011100000,
0b0000010000111000,
0b0000010000001100,
0b0011111111111100,
0b0011111111111100,
0b0000010000000000,
0b0000010000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//5
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0001000000000000,
0b0011000011111100,
0b0010000011111100,
0b0010000010000100,
0b0010000010000100,
0b0011000110000100,
0b0001111100000100,
0b0000111000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//6
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000111111000000,
0b0001111111110000,
0b0011000010111000,
0b0010000010001100,
0b0010000010000100,
0b0011000110000100,
0b0001111100000100,
0b0000111000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//7
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000100,
0b0000000000000100,
0b0011000000000100,
0b0011111000000100,
0b0000111110000100,
0b0000000111110100,
0b0000000001111100,
0b0000000000001100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//8
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000111000110000,
0b0001111101111000,
0b0011000111001100,
0b0010000010000100,
0b0010000010000100,
0b0011000111001100,
0b0001111101111000,
0b0000111000110000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//9
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0010000001110000,
0b0010000011111000,
0b0010000110001100,
0b0010000100000100,
0b0011000100000100,
0b0001110100001100,
0b0000111111111000,
0b0000001111110000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//A
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011000000000000,
0b0011111000000000,
0b0000111110000000,
0b0000010111110000,
0b0000010001111100,
0b0000010000001100,
0b0000010001111100,
0b0000010111110000,
0b0000111110000000,
0b0011111000000000,
0b0011000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//B
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0010000010000100,
0b0010000010000100,
0b0010000010000100,
0b0011000111111100,
0b0001111100111000,
0b0000111000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//C
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000011111100000,
0b0001111111111000,
0b0001100000011000,
0b0011000000001100,
0b0010000000000100,
0b0010000000000100,
0b0010000000000100,
0b0010000000000100,
0b0001000000001000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//D
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0010000000000100,
0b0010000000000100,
0b0010000000000100,
0b0010000000000100,
0b0011000000001100,
0b0001100000011000,
0b0001111111111000,
0b0000011111100000,
0b0000000000000000,
0b0000000000000000,
},
{//E
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0010000010000100,
0b0010000010000100,
0b0010000010000100,
0b0010000010000100,
0b0010000000000100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//F
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000010000100,
0b0000000010000100,
0b0000000010000100,
0b0000000010000100,
0b0000000010000100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//G
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000011111100000,
0b0001111111111000,
0b0001100000011000,
0b0011000000001100,
0b0010000000000100,
0b0010000010000100,
0b0010000010000100,
0b0010000010000100,
0b0011111110000100,
0b0001111110001000,
0b0000000000000000,
0b0000000000000000,
},
{//H
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000010000000,
0b0000000010000000,
0b0000000010000000,
0b0000000010000000,
0b0000000010000000,
0b0000000010000000,
0b0011111111111100,
0b0011111111111100,
0b0000000000000000,
0b0000000000000000,
},
{//I
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//J
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0001000000000000,
0b0010000000000000,
0b0010000000000000,
0b0011111111111100,
0b0001111111111100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//K
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000010000000,
0b0000001111000000,
0b0000011101110000,
0b0001110000111000,
0b0011100000001100,
0b0010000000000100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//L
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0010000000000000,
0b0010000000000000,
0b0010000000000000,
0b0010000000000000,
0b0010000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//M
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000000011100,
0b0000000011110000,
0b0000001111000000,
0b0000111000000000,
0b0011100000000000,
0b0011100000000000,
0b0000111000000000,
0b0000001111000000,
0b0000000011110000,
0b0000000000011100,
0b0011111111111100,
0b0011111111111100,
0b0000000000000000,
},
{//N
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000000001100,
0b0000000001111000,
0b0000000111100000,
0b0000011110000000,
0b0001111000000000,
0b0011000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000000000000,
0b0000000000000000,
},
{//O
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000011111100000,
0b0001111111111000,
0b0001100000011000,
0b0011000000001100,
0b0010000000000100,
0b0010000000000100,
0b0010000000000100,
0b0011000000001100,
0b0001100000011000,
0b0001111111111000,
0b0000011111100000,
0b0000000000000000,
},
{//P
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000100000100,
0b0000000100000100,
0b0000000100000100,
0b0000000110001100,
0b0000000011111000,
0b0000000001110000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//Q
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000011111100000,
0b0001111111111000,
0b0001100000011000,
0b0011000000001100,
0b0010000000000100,
0b0010000000000100,
0b0010000000000100,
0b0011000000001100,
0b0111100000011000,
0b0101111111111000,
0b1100011111100000,
0b1000000000000000,
},
{//R
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011111111111100,
0b0011111111111100,
0b0000000100000100,
0b0000000100000100,
0b0000000100000100,
0b0000011110001100,
0b0001111011111000,
0b0011100001110000,
0b0010000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//S
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0001000001110000,
0b0011000011111000,
0b0010000011001100,
0b0010000110000100,
0b0011001110000100,
0b0001111100001100,
0b0000111000001000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//T
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000100,
0b0000000000000100,
0b0000000000000100,
0b0011111111111100,
0b0011111111111100,
0b0000000000000100,
0b0000000000000100,
0b0000000000000100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//U
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000111111111100,
0b0001111111111100,
0b0011000000000000,
0b0010000000000000,
0b0010000000000000,
0b0010000000000000,
0b0010000000000000,
0b0011000000000000,
0b0001111111111100,
0b0000111111111100,
0b0000000000000000,
0b0000000000000000,
},
{//V
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000001100,
0b0000000001111100,
0b0000000111110000,
0b0000111110000000,
0b0011111000000000,
0b0011000000000000,
0b0011111000000000,
0b0000111110000000,
0b0000000111110000,
0b0000000001111100,
0b0000000000001100,
0b0000000000000000,
0b0000000000000000,
},
{//W
0b0000000000000000,
0b0000000000011100,
0b0000000111111100,
0b0000111111100000,
0b0011111000000000,
0b0011100000000000,
0b0000111110000000,
0b0000001111110000,
0b0000000001111100,
0b0000001111110000,
0b0000111110000000,
0b0011100000000000,
0b0011111000000000,
0b0000111111100000,
0b0000000111111100,
0b0000000000011100,
},
{//X
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011000000001100,
0b0011110000111100,
0b0000111001110000,
0b0000001111000000,
0b0000001111000000,
0b0000111001110000,
0b0011110000111100,
0b0011000000001100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//Y
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000001100,
0b0000000001111100,
0b0000000111110000,
0b0011111110000000,
0b0011111110000000,
0b0000000111110000,
0b0000000001111100,
0b0000000000001100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},
{//Z
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0011000000000100,
0b0011100000000100,
0b0010111000000100,
0b0010011100000100,
0b0010000110000100,
0b0010000011100100,
0b0010000001110100,
0b0010000000011100,
0b0010000000001100,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
0b0000000000000000,
},

};

const byte charToIndex[] = {
                              0,0,0,0,0,0,0,0,0,0,
                              0,0,0,0,0,0,0,0,0,0,
                              0,0,0,0,0,0,0,0,0,0,
                              0,0,0,0,0,0,0,0,0,0,
                              0,0,0,0,0,0,0,0,0,1,
                              2,3,4,5,6,7,8,9,0,0,
                              0,0,0,0,0,10,11,12,13,14,
                              15,16,17,18,19,20,21,22,23,24,
                              26,26,27,28,29,30,31,32,33,34,
                              35,0,0,0,0,0,0,10,11,12,
                              13,14,15};

uint16_t* showingTable;

void showConstTable(const uint16_t* table, int delayTime=20);
void showOneRow(uint16_t data);

void showConstTable(const uint16_t* table, int delayTime){
  for(byte i=0; i<NUM_OF_ROWS; i++){
    showOneRow(pgm_read_word_near(table + i));
    delayMicroseconds(5000);
  }
}


void showOneRow(uint16_t data){
  digitalWrite(LATCH_PIN, LOW);
  shiftOut(DATA_PIN, CLOCK_PIN, MSBFIRST, highByte(data));
  shiftOut(DATA_PIN, CLOCK_PIN, MSBFIRST, lowByte(data));
  digitalWrite(LATCH_PIN, HIGH);
}
